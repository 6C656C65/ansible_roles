---
- name: Check if host-specific certificates exist
  ansible.builtin.stat:
    path: "{{ (nginx_cert_source_override | default(role_path ~ '/files')) ~ '/' ~ inventory_hostname }}/"
  register: nginx_certs_present
  delegate_to: localhost

- name: Ensure necessary directories and files are in place
  when: nginx_certs_present.stat.exists
  block:
    - name: Create necessary directories
      ansible.builtin.file:
        path: "{{ nginx_directory }}{{ item.name }}"
        state: directory
        mode: '0755'
      with_items:
        - { name: "/" }
        - { name: "/certs" }

    - name: Copy host-specific docker-compose.yml
      ansible.builtin.template:
        src: "docker-compose.yml"
        dest: "{{ nginx_directory }}/docker-compose.yml"
        mode: '0644'

    - name: Copy host-specific nginx.conf
      ansible.builtin.template:
        src: "nginx.conf"
        dest: "{{ nginx_directory }}/nginx.conf"
        mode: '0644'
      notify: Restart nginx docker

    - name: Copy host-specific certificates
      ansible.builtin.copy:
        src: "{{ (nginx_cert_source_override | default(role_path ~ '/files')) ~ '/' ~ inventory_hostname }}/"
        dest: "{{ nginx_directory }}/certs/"
        mode: '0644'
      notify: Restart nginx docker

    - name: Start nginx service
      ansible.builtin.command: docker-compose up -d
      args:
        chdir: "{{ nginx_directory }}"
      changed_when: false
